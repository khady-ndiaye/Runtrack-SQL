import mysql.connector

class Employe:
    def __init__(self):
        self.conn = mysql.connector.connect(
            host="127.0.0.1",
            user="root",
            password="Papito1989*",
            database="entreprise"
        )
        self.cursor = self.conn.cursor()

    #  Ajouter un employ√©
    def ajouter_employe(self, nom, prenom, salaire, id_service):
        sql = "INSERT INTO employe (nom, prenom, salaire, id_service) VALUES (%s, %s, %s, %s)"
        self.cursor.execute(sql, (nom, prenom, salaire, id_service))
        self.conn.commit()
        print(f" Employ√© {prenom} {nom} ajout√© avec succ√®s.")

    #  Lire tous les employ√©s
    def afficher_employes(self):
        self.cursor.execute("SELECT * FROM employe")
        for row in self.cursor.fetchall():
            print(row)

    #  Mettre √† jour un employ√©
    def mettre_a_jour_employe(self, id, salaire):
        sql = "UPDATE employe SET salaire = %s WHERE id = %s"
        self.cursor.execute(sql, (salaire, id))
        self.conn.commit()
        print(f" Salaire de l'employ√© ID {id} mis √† jour.")

    #  Supprimer un employ√©
    def supprimer_employe(self, id):
        sql = "DELETE FROM employe WHERE id = %s"
        self.cursor.execute(sql, (id,))
        self.conn.commit()
        print(f" Employ√© ID {id} supprim√©.")

    # üîπ Fermer la connexion
    def fermer_connexion(self):
        self.cursor.close()
        self.conn.close()
        print(" Connexion ferm√©e.")

#  Test de la classe
employe_manager = Employe()
employe_manager.ajouter_employe("Test", "User", 3200, 1)  # Ajout d'un employ√©
employe_manager.afficher_employes()  # Affichage des employ√©s
employe_manager.mettre_a_jour_employe(1, 3700)  # Mise √† jour d'un salaire
employe_manager.supprimer_employe(7)  # Suppression d'un employ√©
employe_manager.fermer_connexion()  # Fermeture de la connexion
